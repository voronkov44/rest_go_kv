services:
  postgres:
    container_name: postgres_golang
    image: postgres:16.4-alpine
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: db_kv
      PGDATA: /data/postgres
    volumes:
      - postgres_data:/data/postgres
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d db_kv"]
      interval: 5s
      timeout: 5s
      retries: 5

  app:
    build:
      context: .
      target: final
    container_name: golang_app
    ports:
      - "8080:8080"
    env_file:
      - .env
    depends_on:
      postgres:
        condition: service_healthy
    restart: unless-stopped

  migrate:
    build:
      context: .
      target: builder
    container_name: golang_migrate
    env_file:
      - .env
    depends_on:
      postgres:
        condition: service_healthy
    command: ["go", "run", "migrations/auto.go"]
    restart: on-failure

volumes:
  postgres_data: